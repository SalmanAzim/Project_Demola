<!DOCTYPE html>
<html lang="en">

<head>

	<meta charset="utf-8">
	<title>Factory Visualization</title>

	<link rel="stylesheet" href="css/bootstrap.min.css">
	<link rel="stylesheet" href="css/reset.css">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
	<link rel="stylesheet" type="text/css" href="css/main.css">
	<link rel="stylesheet" type="text/css" href="css/angular-circular-navigation.css">
	<link rel="stylesheet" type="text/css" href="css/custom.css">
	<link rel="stylesheet" type="text/css" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.1/themes/base/jquery-ui.css">
	<link rel="stylesheet" type="text/css" href="http://static.jquery.com/ui/css/demo-docs-theme/ui.theme.css">


</head>

<body id="my_body" ng-app="myApp" ng-controller="MyController">

	<div class="left" id='LeftPan'>
		<span class='TitleText2'>
					<span id='LeftPanAdjustButton' class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span><br />
					Factory
		<br />Visualization
		</span>
		<uib-tabset id='ttt' active="activeJustified" justified="true">
			<uib-tab index="0" heading="Object" ng-click="tab1()">
				<br>
				<uib-accordion close-others="true">
					<div class="dropdown">
						<button class=" dropdown-toggle TitleText" type="button" data-toggle="collapse" href="#collapse1">
                            panels
							<span class="caret"></span>
						</button>
						<div id="collapse1" class="panel-collapse collapse">
							<ul id="drag-elements1" class="drag-elements" style="list-style-type:none">
								<li data-objectid="panElement" data-type="scalable" class="drag-elements-li" draggable="true" sytle="background: #EEECEC;">Panel</li>
							</ul>
						</div>
					</div>
					<div class="dropdown">
						<button class=" dropdown-toggle TitleText" type="button" data-toggle="collapse" href="#collapse2">
                            General
							<span class="caret"></span>
						</button>
						<div id="collapse2" class="panel-collapse collapse">
							<ul id="drag-elements1" class="drag-elements" style="list-style-type:none">
								<li data-objectid="label" data-type="unscalable" draggable="true"><label for='label' style=' font-family: Verdana; color: black; '> textLabel </label></li>
								<li data-objectid="textBox" data-type="unscalable" draggable="true"><label for='textBox' style='font-family: Verdana; color: black; background-color: #FFFFFF; position:relative; display: inline-block;	border: 1px solid #000000; border-radius: 3px;'> SimpleTextBox</label></li>
								<li data-objectid="listBox" data-type="unscalable" draggable="true">
									<ul style='font-family: Verdana; color: black; background-color: #FFFFFF; list-style-type:none; border-style: inset; float: left; margin-left: 70px;'>
										<li>Item0</li>
										<li>Item1</li>
									</ul>
								</li>
								<p></p>
								<li data-objectid="image" data-type="scalable" draggable="true"><img src="../images/image.png" height="30px" width="40px"></li>
							</ul>
						</div>
					</div>
					<div class="dropdown">
						<button class=" dropdown-toggle TitleText" type="button" data-toggle="collapse" href="#collapse3">
                            Element SVG
							<span class="caret"></span>
						</button>
						<div id="collapse3" class="panel-collapse collapse">
							<ul id="drag-elements1" class="drag-elements">
								<svg-icon data-objectid="svg-square" data-type="unscalable" p="rectangle" draggable="true"></svg-icon>
								<svg-icon data-objectid="svg-circle" data-type="unscalable" p="circle" draggable="true"></svg-icon>
								<svg-icon data-objectid="svg-path" data-type="unscalable" p="arrow" draggable="true"></svg-icon>
							</ul>
						</div>
					</div>
					<div class="dropdown">
						<button class=" dropdown-toggle TitleText" type="button" data-toggle="collapse" href="#collapse4">
                            Charts & Widgets
							<span class="caret"></span>
						</button>
						<div id="collapse4" class="panel-collapse collapse">
							<ul id="drag-elements1" class="drag-elements" style="list-style-type:none">
								<li data-objectid="gauge-1" data-type="scalable" draggable="true"><img src="../images/gaugeone.png" height="70px" width="70px" style="float:left;"></li>
								<li data-objectid="gauge-2" data-type="scalable" draggable="true"><img src="../images/gaugetwo.png" height="70px" width="70px"></li>
								&nbsp; &nbsp; &nbsp; &nbsp;
								<li data-objectid="gauge-3" data-type="scalable" draggable="true"><img src="../images/gaugethree.png" height="70px" width="70px" style="float:left;"></li>
								<li data-objectid="bar-chart" data-type="scalable" draggable="true"><img src="../images/barchrt.png" height="70px" width="70px"></li>
								&nbsp; &nbsp; &nbsp; &nbsp;
								<li data-objectid="line-chart" data-type="scalable" draggable="true"><img src="../images/candlechrt.png" height="70px" width="70px" style="float:left;"></li>
								<li data-objectid="candle-chart" data-type="scalable" draggable="true"><img src="../images/linechrt.png" height="70px" width="70px"></li>
								&nbsp; &nbsp; &nbsp; &nbsp;
								<li data-objectid="dsBarChart" data-type="scalable" draggable="true"><img src="../images/verbarChrt.png" height="70px" width="70px"></li>
							</ul>
						</div>
					</div>
					<div class="dropdown">
						<button class=" dropdown-toggle TitleText" type="button" data-toggle="collapse" href="#collapse5">
                            Buttons & Menu
							<span class="caret"></span>
						</button>
						<div id="collapse5" class="panel-collapse collapse">
							<ul id="drag-elements1" class="drag-elements" style="list-style-type:none">
								<li data-objectid="MenuButton" data-type="unscalable" draggable="true">
									<div class="cn-button small"><i class="fa fa-desktop mt-top-15"></i></div>
								</li>
							</ul>
						</div>
					</div>
				</uib-accordion>
			</uib-tab>
			<uib-tab index='1' select="tabAlert()" ng-click="tab2()">
				<uib-tab-heading>
					DataPoint
				</uib-tab-heading>
				<br>
				<div>
					Parent &nbsp;
				</div>
				<div>
					<select class="input-sm" ng-model="dpSelectPanel.parentSelect" ng-change="generateDP()">
						<option ng-repeat="i in allDP">{{i.id}}</option>
					</select>
				</div>
				<br>
				<div>
					Data Point &nbsp;
				</div>
				<div>
					<select class="input-sm" ng-model="dpSelectPanel.dpSelect" ng-change="generateObject()">
							<option ng-repeat="i in dpSelectPanel.dpList">{{i}}</option>
						</select>
				</div>
				<br>
				<br>
				<div>
					Objects For DataPoint &nbsp;
				</div>
				<br>
				<div style="background: #FFFFFF;border-style: inset;">
					<ul id="drag-elements1" class="drag-elements">
						<li data-objectid="textBox" data-type="unscalable" draggable="true" ng-show="(dpSelectPanel.doubleShow) || (dpSelectPanel.stringShow) || (dpSelectPanel.longShow) || (dpSelectPanel.integerShow)|| (dpSelectPanel.booleanShow)"><label class='mock-text-box' for='textBox' style=' font-family: Verdana; color: black; '>SimpleTextBox</label></li>
						<li data-objectid="listBox" data-type="unscalable" draggable="true" ng-show="(dpSelectPanel.arrayShow)">
							<ul style='font-family: Verdana; color: black; background-color: #FFFFFF; list-style-type:none; border-style: inset;'>
								<li>Item0</li>
								<li>Item1</li>
							</ul>
						</li>
						<svg-icon data-objectid="svg-square" data-type="unscalable" p="rectangle" draggable="true" ng-show="dpSelectPanel.booleanShow"></svg-icon>
						<svg-icon data-objectid="svg-circle" data-type="unscalable" p="circle" draggable="true" ng-show="dpSelectPanel.booleanShow"></svg-icon>
						<svg-icon data-objectid="svg-path" data-type="unscalable" p="arrow" draggable="true" ng-show="dpSelectPanel.booleanShow"></svg-icon>
						<li data-objectid="gauge-1" data-type="scalable" draggable="true"><img src="../images/gaugeone.png" height="100px" width="100px" ng-show="(dpSelectPanel.doubleShow) || (dpSelectPanel.integerShow)"></li>
						<li data-objectid="gauge-2" data-type="scalable" draggable="true"><img src="../images/gaugetwo.png" height="100px" width="100px" ng-show="(dpSelectPanel.doubleShow) || (dpSelectPanel.integerShow)"></li>
						<li data-objectid="gauge-3" data-type="scalable" draggable="true"><img src="../images/gaugethree.png" height="100px" width="100px" ng-show="(dpSelectPanel.doubleShow) || (dpSelectPanel.integerShow)"></li>
						<li data-objectid="candle-chart" data-type="scalable" draggable="true"><img src="../images/candlechrt.png" height="100px" width="120px" ng-show="(dpSelectPanel.mapShow)"></li>
					</ul>
				</div>
			</uib-tab>
		</uib-tabset>


	</div>

	<div id="main_ui" class="main" ng-style="mainPanelStyle">
		<div id="drop-target-one" ng-style="dropTargetOne.style">

	            <span id='LeftPanAdjustButton2' class="glyphicon glyphicon-chevron-right not" aria-hidden="true"></span>


			<nav role="navigation" id='UIMenu'>
				<h1><span id="MenuText">Menu</span></h1>
				<ol id='mainUImenu'>
					<li class='list' id='CreateBut'><a href="#">Create</a></li>
					<li class='list'><a href="#">Save</a></li>
					<li class='list'><a href="#">Cancel</a></li>
				</ol>
			</nav>

			<div id='CreatePop'>
				<a href="#"><button id='formClose' class="close">x &nbsp;</button></a>
				<br/>
				<span class="TitleText2"> &nbsp; &nbsp;  CONFIRM CREATION</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<input type="text"
					name="name" placeholder="Screen Name" class="input-sm" ng-model="screenName" required> &nbsp; &nbsp; &nbsp;<button class="btn btn-success"
					ng-click="createScreen()">Confirm</button>
				<br/>
				<br/> ! This name will be used as the address endpoint so please no 'space' or 'special Characters'
			</div>
			<div ng-click="propertyPanel()" class="propButton">
				Hello
			</div>
		</div>
	</div>

	<!-- Options with respect to bottom panel. These will be hide/shown based on the selected object-->
	<div class="bottom" ng-show="bottomPropPanel.panelShow" ng-style="bottomPanelStyle" >
		<div class="row">
			<div class="col-md-6 col-lg-6">
				Id &nbsp; &nbsp; &nbsp; &nbsp;
				<input type="text" ng-model="bottomPropPanel.name">
			</div>
			<div class="col-md-6 col-lg-6 text-right" ng-show="bottomPropPanel.minMaxButton">
				<button type="button" class="btn btn-primary" ng-model="bottomPropPanel.minMaxShow" uib-btn-checkbox ng-click="arrayMapDPGenerate(bottomPropPanel.minMaxValue)">
        			{{bottomPropPanel.minMaxValue}}
    			</button>
			</div>
		</div>

		<div ng-show="(bottomPropPanel.dpSelectShow) && (!bottomPropPanel.justPanel)">
			Parent &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.parentSelect" ng-change="generatePropDP()" required>
				<option ng-repeat="i in allDP">{{i.id}}</option>
			</select> &nbsp;&nbsp;&nbsp; Data Point &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.dpSelect" required>
				<option ng-repeat="i in bottomPropPanel.dpList">{{i}}</option>
			</select>
		</div>

		<div ng-show="bottomPropPanel.fontPropShow">
			<span ng-show="(!bottomPropPanel.minMaxShow)">
				Color &nbsp; &nbsp;&nbsp;&nbsp;
			</span>
			<select class="input-sm" ng-model="bottomPropPanel.colorSelect" ng-show="!bottomPropPanel.minMaxShow">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select> Font &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.fontSelect">
				<option ng-repeat="i in bottomPropPanel.fontList">{{i}}</option>
			</select> &nbsp;&nbsp;&nbsp; Size &nbsp;
			<input type="number" ng-model="bottomPropPanel.fontSize" min="1" max="100">

			<span ng-show="(!bottomPropPanel.minMaxShow) && (!bottomPropPanel.gaugeDetailsShow)">
				Background-Color &nbsp; &nbsp;&nbsp;&nbsp;
			</span>
			<select class="input-sm" ng-model="bottomPropPanel.backColorSelect" ng-show="(!bottomPropPanel.minMaxShow) && (!bottomPropPanel.gaugeDetailsShow)">
				<option ng-repeat="i in bottomPropPanel.backColorList">{{i}}</option>
			</select>
		</div>

		<!-- property setting options for Image and SVG (while svg Url is made hidden)-->
		<div ng-show="(bottomPropPanel.imageDetailsShow) || (bottomPropPanel.svgDetailsShow)">
			<div class="row">
				<div class="col-md-1 col-lg-1">
					Rotate Object &nbsp; &nbsp;&nbsp;&nbsp;
				</div>
				<div class="col-md-6 col-lg-6">
					<!--Slider for adjusting the angle-->
					<input type="range" min="0" max="360" step="5" onchange="showValue(this.value)" ng-model="bottomPropPanel.degree" />
				</div>
				<div class="col-md-2 col-lg-2">
					<!--Showing current value of the slider-->
					{{bottomPropPanel.degree}}
				</div>
			</div>
			<span ng-show="!bottomPropPanel.svgDetailsShow">url &nbsp; &nbsp;&nbsp;&nbsp; </span>
			<input type="text" ng-model="bottomPropPanel.url" ng-show="!bottomPropPanel.svgDetailsShow">

			<!-- Property objects for all Svg -->
			<span ng-show="(bottomPropPanel.justPanel) && (!bottomPropPanel.imageDetailsShow)"> color </span> &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.colorSelect" ng-show="(bottomPropPanel.justPanel) && (!bottomPropPanel.imageDetailsShow)">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select>

			<!-- Property objects for SVG square -->
			&nbsp;&nbsp;&nbsp; <span ng-show="(!bottomPropPanel.imageDetailsShow) && (!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgPathShow)"> Width(px) </span>			&nbsp;
			<input type="number" ng-model="bottomPropPanel.width" min="1" max="500" ng-show="(!bottomPropPanel.imageDetailsShow) && (!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgPathShow)">			&nbsp;&nbsp;&nbsp; <span ng-show="(!bottomPropPanel.imageDetailsShow) && (!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgPathShow)"> Height(px) </span>			&nbsp;
			<input type="number" ng-model="bottomPropPanel.height" min="1" max="500" ng-show="(!bottomPropPanel.imageDetailsShow) &&(!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgPathShow)">

			<!-- Property objects for SVG Circle -->
			&nbsp;&nbsp;&nbsp; <span ng-show="(!bottomPropPanel.svgSquareShow) && (!bottomPropPanel.svgPathShow) && (!bottomPropPanel.imageDetailsShow)"> radius(px) </span>			&nbsp;
			<input type="number" ng-model="bottomPropPanel.radius" min="1" max="500" ng-show="(!bottomPropPanel.svgSquareShow) && (!bottomPropPanel.svgPathShow) && (!bottomPropPanel.imageDetailsShow)">

			<!-- Property objects for SVG Path -->
			&nbsp;&nbsp;&nbsp; <span ng-show="(!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgSquareShow) && (!bottomPropPanel.imageDetailsShow)"> zoom(%) </span>			&nbsp;
			<input type="number" ng-model="bottomPropPanel.zoom" min="1" max="500" ng-show="(!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgSquareShow) && (!bottomPropPanel.imageDetailsShow)">
		</div>

		<!-- property setting options for SVG-->
		<div ng-show="bottomPropPanel.svgDetailsShow">
			<input type="checkbox" ng-model="bottomPropPanel.justPanel"> Just Panel<br>
		</div>

		<!-- property setting options for gauge-->
		<div ng-show="bottomPropPanel.gaugeDetailsShow">
			unit &nbsp;
			<input type="text" ng-model="bottomPropPanel.unit">
			<br/>
			<span ng-show="(!bottomPropPanel.minMaxShow)"> Gauge Dial Color</span>
			<select class="input-sm" ng-model="bottomPropPanel.backColorSelect" ng-show="(!bottomPropPanel.minMaxShow)">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select>
		</div>

		<!-- property setting options for SVG-->
		<div ng-show="(!bottomPropPanel.justPanel) &&(bottomPropPanel.svgDetailsShow)">
			Normal-Color &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.nomColorSelect">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select> &nbsp;&nbsp;&nbsp;Danger-Color &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.dangrColorSelect">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select>
		</div>

		<!-- property setting options for List Objects-->
		<div ng-show="(bottomPropPanel.rowSelectionShow) && (!bottomPropPanel.minMaxShow)">
			<input type="checkbox" ng-model="bottomPropPanel.unfixRowNos"> Unfix Rows<br> No of Rows &nbsp; &nbsp;&nbsp;&nbsp;
			<input type="number" ng-model="bottomPropPanel.rowNos" min="1" max="100" ng-disabled="bottomPropPanel.unfixRowNos">
		</div>

		<div ng-show="bottomPropPanel.minMaxShow">

			{{bottomPropPanel.maxTextBoxDisplayName}} &nbsp;
			<input type="number" ng-model="bottomPropPanel.value"> &nbsp;&nbsp;&nbsp; {{bottomPropPanel.maxSelectDisplayName}} &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.maxColorSelect">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select> &nbsp;&nbsp;&nbsp; {{bottomPropPanel.minTextBoxDisplayName}} &nbsp;
			<input type="number" ng-model="bottomPropPanel.maxPercent"> &nbsp;&nbsp;&nbsp; {{bottomPropPanel.minSelectDisplayName}}
			&nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.minColorSelect">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select>

			<span ng-show="!bottomPropPanel.gaugeDetailsShow">
			&nbsp;&nbsp;&nbsp; {{bottomPropPanel.nomTextBoxDisplayName}} &nbsp;</span>
			<input type="number" ng-model="bottomPropPanel.minPercent" ng-show="!bottomPropPanel.gaugeDetailsShow"> &nbsp;&nbsp;&nbsp;
			{{bottomPropPanel.nomSelectDisplayName}} &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.nomColorSelect">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select>
		</div>

		<div class="text-right">
			<a type="button" class="btn btn-default" ng-click="assignProperties()">
				<span> OK</span>
			</a>
		</div>

	</div>

	<div id="menu">
		<a onclick="removeCustomMenu(this)">
			<img src="http://puu.sh/nr60s/42df867bf3.png" /> Delete Element
		</a>
		<a onclick="showDoubleMenu(this)" ng-click="testFunction(this)">
			<img src="http://puu.sh/nr5Z6/4360098fc1.png" /> Properties
		</a>
	</div>
</body>

<script src="https://code.jquery.com/jquery-1.12.3.min.js"></script>
<script type="text/javascript" src="js/controllers/angular.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js" type="text/javascript"></script>
<script>
	var elementDragged = null;	var right_global; var test_data; var double_Click

</script>
<script src="js/controllers/demo.js"></script>
<script type="text/javascript" src="js/controllers/test.js"></script>
<script type="text/javascript" src="js/controllers/svg_script.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="js/controllers/jquery.ui.core.js"></script>
<script src="js/controllers/jquery.ui.widget.js"></script>
<script src="js/controllers/jquery.ui.mouse.js"></script>
<script src="js/controllers/jquery.ui.draggable.js"></script>
<script src="js/controllers/ui-bootstrap-tpls-1.3.2.min.js"></script>
<script src="js/controllers/bootstrap.min.js"></script>
<script src="js/controllers/angularCodes.js"></script>
<script type="text/javascript" src="js/controllers/multidraggable.js"></script>

<script>
	function menu(x, y,i) {
				i.top = y + "px";
				i.left = x + "px";
				i.visibility = "visible";
				i.opacity = "1";
			}

</script>

<script>
	function showCustomMenu(currElement) {

					right_global = currElement;
					var e = window.event;
					var i = document.getElementById("menu").style;
					var posX = e.clientX;
					var posY = e.clientY;
					menu(posX, posY,i);
					e.preventDefault();

			}

</script>

<script>
	function feedDataToElement(currElement){
				var mychart;
				var chartType = right_global.getAttribute("type");
				console.log(right_global.getAttribute("type"));
				function addLeadingZero(num){
						   return (num <= 9)? ("0"+num) : num;
					 }
				var chart_id = document.getElementById(right_global.id).children[0].id;
				function updateData() {
					mychart = FusionCharts(chart_id);
					currDate = new Date(),
					label = addLeadingZero(currDate.getHours()) + ":" +
								addLeadingZero(currDate.getMinutes()) + ":" +
								addLeadingZero(currDate.getSeconds());
					if(chartType == 'angulargauge' || chartType == 'cylinder'){
						randomValue = Math.floor(Math.random() * 200) + 50,
						strData ="&value=" + randomValue;
					}
					else if(chartType == "realtimeline"){
						randomValue = Math.floor(Math.random() * 50) / 100 + 35.25,
						strData = "&label=" + label  + "&value=" + randomValue;
					}
					test_data = strData;
					mychart.feedData(strData);
				}
				var myVar = setInterval(function () {
					updateData();
				}, 1000);
			}

</script>

<script>
	function removeCustomMenu(currElement) {

			right_global.remove();

					var e = window.event;
					var i = document.getElementById("menu").style;
				i.opacity = "0";
				setTimeout(function() {
				  i.visibility = "hidden";
				});


			right_global = null;

			}

</script>

<script>
	function showDoubleMenu(currElement) {
				double_Click = currElement;
				var socket = io();
				socket.emit("panelVisibility",{'elementId':currElement.id});
			}

</script>

<script>
	var socket = io();

			//this is pinged inorder to delete the old HTML element and update with the new element
			socket.on("prop_Changed", function(data){
				//remove the older element
				double_Click.remove();
				double_Click.innerHTML = data.objectHtml;
				//replace with the newer element
				$("#drop-target-one").append(double_Click);
			});

			socket.on("added_Html", function(notificationData) {

				if(notificationData.loggedinUser != loggedinUser){

					if(notificationData.isAngular){
						var $htmlObject = $(notificationData.currentHtml);
						$htmlObject.attr("dataSource",JSON.stringify(notificationData.dataSource));
						$htmlObject.css({
							position: 'absolute',
							cursor: 'pointer'
						});
						var angular_obj = $htmlObject[0];
						angular_obj.setAttribute("oncontextmenu","showCustomMenu(this)");
						angular_obj.setAttribute("ondblclick","showDoubleMenu(this)");

						angular.injector(['ng', 'myApp']).invoke(function ($compile) {
							var $scope = angular.element(document.body).scope();
							var dataSource = notificationData.dataSource;

							var to_compile = angular_obj;
							//var to_compile = notificationData.currentHtml;
							var $compiled = $compile(to_compile)($scope);
							$scope.$digest();
							// Append the compiled output to the page.
							$("#drop-target-one").append($compiled[0]);
						});
					}else{
						var $htmlObject = $(notificationData.currentHtml);
						$("#drop-target-one").append($htmlObject);
					}

					setAllDrags();
				}

			});

			socket.on("moved_Html", function(notificationData) {

				if(notificationData.loggedinUser != loggedinUser){
					console.log(notificationData);
					console.log("pinged");
					//loggedinUser=" + loggedinUser + "&currentId=" + this.id + "&positionX=" + ui.position.left+ "&positionY=" + ui.position.top;
					var nodes_test = document.getElementById(notificationData.currentId);
					nodes_test.style.top=(notificationData.positionY)+ "px";
					nodes_test.style.left=(notificationData.positionX)+ "px";

				}

			});

</script>

<script type="text/javascript">
	function showValue(newValue)
			{
				var degree = newValue;
				var svg_el = $(double_Click);
				//Rotation is added for both the child and the parent element
				if((svg_el.attr("data-objectid")=='svg-square') || (svg_el.attr("data-objectid")=='svg-circle') || (svg_el.attr("data-objectid")=='svg-path')){
					$(svg_el.children()[0]).css('-moz-transform', 'rotate('+degree+'deg)')
					$(svg_el.children()[0]).css('-webkit-transform', 'rotate('+degree+'deg)');
					$(svg_el.children()[0]).css('-o-transform', 'rotate('+degree+'deg)');
					$(svg_el.children()[0]).css('-ms-transform', 'rotate('+degree+'deg)');
				}
				svg_el.css('-moz-transform', 'rotate('+degree+'deg)');
				svg_el.css('-webkit-transform', 'rotate('+degree+'deg)');
				svg_el.css('-o-transform', 'rotate('+degree+'deg)');
				svg_el.css('-ms-transform', 'rotate('+degree+'deg)');
			}

</script>

<script src="js/jd.js"></script>

</html>

<script>
	// The functionality is used in order to hide the drop down menu while some item is being clicked
	var menu_item = document.getElementById("menu").style;
	document.addEventListener('click', function(e) {
		menu_item.opacity = "0";
		setTimeout(function() {
			menu_item.visibility = "hidden";
		});
	}, false);

	$('div.main').click(function(){
		socket.emit("panelVisibilityOnClick",{});
	});

</script>
