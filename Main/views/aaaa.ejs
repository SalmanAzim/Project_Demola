<!DOCTYPE html>
<html lang="en">

<head>

	<meta charset="utf-8">
	<title>Factory Visualiztion</title>

	<link rel="stylesheet" href="css/bootstrap.min.css">
	<link rel="stylesheet" href="css/angular-chart.css">
	<script type="text/javascript" src="js/controllers/angular.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.0/angular-sanitize.min.js"></script>
	<script>
		var elementDragged = null;	var right_global; var test_data; var double_Click
	</script>
	<script>
		var loggedinUser = <%- JSON.stringify(user) %>;
	</script>
	<script src="js/controllers/demo.js"></script>
	<script type="text/javascript" src="js/controllers/test.js"></script>
	<script type="text/javascript" src="js/controllers/svg_script.js"></script>
	<script src="/socket.io/socket.io.js"></script>
	<script src="https://code.jquery.com/jquery-1.12.3.min.js"></script>
	<script src="js/controllers/jquery.ui.core.js"></script>
	<script src="js/controllers/jquery.ui.widget.js"></script>
	<script src="js/controllers/jquery.ui.mouse.js"></script>
	<script src="js/controllers/jquery.ui.draggable.js"></script>
	<script src="js/controllers/ui-bootstrap-tpls-1.3.2.min.js"></script>
	<script src="js/controllers/CollapsibleLists.js"></script>
	<script src="js/controllers/bootstrap.min.js"></script>
	<script src="js/controllers/angular-dialgauge.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/angular-morris-chart/1.2.0/angular-morris-chart.min.js"></script>
	<script src="js/controllers/angularCodes.js"></script>
	<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js" type="text/javascript"></script>
	<script type="text/javascript" src="js/controllers/multidraggable.js"></script>


	<link rel="stylesheet" href="css/reset.css">
	<link rel="stylesheet" type="text/css" href="css/main.css">
	<link rel="stylesheet" type="text/css" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.1/themes/base/jquery-ui.css">
	<link rel="stylesheet" type="text/css" href="http://static.jquery.com/ui/css/demo-docs-theme/ui.theme.css">

	<script>
		function menu(x, y,i) {
				i.top = y + "px";
				i.left = x + "px";
				i.visibility = "visible";
				i.opacity = "1";
			}
	</script>

	<script>
		function showCustomMenu(currElement) {

					right_global = currElement;
					var e = window.event;
					var i = document.getElementById("menu").style;
					var posX = e.clientX;
					var posY = e.clientY;
					menu(posX, posY,i);
					e.preventDefault();
				
			}
	</script>

	<script>
		function feedDataToElement(currElement){
				var mychart;
				var chartType = right_global.getAttribute("type");
				console.log(right_global.getAttribute("type"));
				function addLeadingZero(num){
						   return (num <= 9)? ("0"+num) : num;
					 }
				var chart_id = document.getElementById(right_global.id).children[0].id;
				function updateData() {					
					mychart = FusionCharts(chart_id);
					currDate = new Date(),
					label = addLeadingZero(currDate.getHours()) + ":" +
								addLeadingZero(currDate.getMinutes()) + ":" +
								addLeadingZero(currDate.getSeconds());
					if(chartType == 'angulargauge' || chartType == 'cylinder'){
						randomValue = Math.floor(Math.random() * 200) + 50,
						strData ="&value=" + randomValue;
					}
					else if(chartType == "realtimeline"){
						randomValue = Math.floor(Math.random() * 50) / 100 + 35.25,
						strData = "&label=" + label  + "&value=" + randomValue;
					}		
					test_data = strData;
					mychart.feedData(strData);
				}						
				var myVar = setInterval(function () {
					updateData();
				}, 1000);
			}
	</script>

	<script>
		function removeCustomMenu(currElement) {

			right_global.remove();

					var e = window.event;
					var i = document.getElementById("menu").style;
				i.opacity = "0";
				setTimeout(function() {
				  i.visibility = "hidden";
				});
				
				
			right_global = null;
				
			}
	</script>

	<script>
		function showDoubleMenu(currElement) {
				double_Click = currElement;
				var socket = io();
				socket.emit("panelVisibility",{'elementId':currElement.id});
			}
	</script>

	<script>
		var socket = io();
		
			//this is pinged inorder to delete the old HTML element and update with the new element
			socket.on("prop_Changed", function(data){
				//remove the older element
				double_Click.remove();						
				double_Click.innerHTML = data.objectHtml;
				//replace with the newer element		
				$("#drop-target-one").append(double_Click);			
			});	
			
			socket.on("added_Html", function(notificationData) {
			
				if(notificationData.loggedinUser != loggedinUser){		

					if(notificationData.isAngular){
						var $htmlObject = $(notificationData.currentHtml);
						$htmlObject.attr("dataSource",JSON.stringify(notificationData.dataSource));
						$htmlObject.css({
							position: 'absolute',
							cursor: 'pointer'
						});
						var angular_obj = $htmlObject[0];
						angular_obj.setAttribute("oncontextmenu","showCustomMenu(this)");
						angular_obj.setAttribute("ondblclick","showDoubleMenu(this)");

						angular.injector(['ng', 'myApp']).invoke(function ($compile) {
							var $scope = angular.element(document.body).scope();
							var dataSource = notificationData.dataSource;
										
							var to_compile = angular_obj;
							//var to_compile = notificationData.currentHtml;
							var $compiled = $compile(to_compile)($scope);
							$scope.$digest();
							// Append the compiled output to the page.
							$("#drop-target-one").append($compiled[0]);
						});	
					}else{
						var $htmlObject = $(notificationData.currentHtml);
						$("#drop-target-one").append($htmlObject);
					}			

					setAllDrags();					
				}
				
			});

			socket.on("moved_Html", function(notificationData) {

				if(notificationData.loggedinUser != loggedinUser){				
					console.log(notificationData);
					console.log("pinged");		
					//loggedinUser=" + loggedinUser + "&currentId=" + this.id + "&positionX=" + ui.position.left+ "&positionY=" + ui.position.top;
					var nodes_test = document.getElementById(notificationData.currentId);
					nodes_test.style.top=(notificationData.positionY)+ "px";
					nodes_test.style.left=(notificationData.positionX)+ "px";				
						
				}
				
			});
	</script>

</head>

<body id="my_body" ng-app="myApp" ng-controller="MyController">

	<div class="left">
		<uib-tabset active="activeJustified" justified="true">
			<uib-tab index="0" heading="Object">
				<br>
				<uib-accordion close-others="true">
					<uib-accordion-group is-open="status1.open">
						<uib-accordion-heading>
							Elements
							<i class="pull-right glyphicon" ng-class="{'glyphicon-chevron-down': status1.open, 'glyphicon-chevron-right': !status1.open}"></i>
						</uib-accordion-heading>
						<ul id="drag-elements1" class="drag-elements" style="list-style-type:none">
							<li data-objectid="image" draggable="true"><img src="../images/image.png" height="30px" width="40px"></li>
							<li class="drag-elements-li" draggable="true">Element Three</li>
							<li class="drag-elements-li" draggable="true">Element Four</li>
							<li class="drag-elements-li" draggable="true">Element Five</li>
						</ul>
					</uib-accordion-group>
					<uib-accordion-group is-open="status4.open">
						<uib-accordion-heading>
							General
							<i class="pull-right glyphicon" ng-class="{'glyphicon-chevron-down': status4.open, 'glyphicon-chevron-right': !status4.open}"></i>
						</uib-accordion-heading>
						<ul id="drag-elements1" class="drag-elements" style="list-style-type:none">
							<li data-objectid="label" draggable="true"><label for='label' style=' font-family: Verdana; color: black; '> textLabel </label></li>
							<li data-objectid="textBox" draggable="true"><label class='mock-text-box' for='textBox' style='font-family: Verdana; color: black; background-color: #FFFFFF;'>SimpleTextBox</label></li>
							<li data-objectid="listBox" draggable="true">
								<ul style='font-family: Verdana; color: black; background-color: #FFFFFF; list-style-type:none; border-style: inset;'>
									<li>Item0</li>
									<li>Item1</li>
								</ul>
							</li>
						</ul>
					</uib-accordion-group>
					<uib-accordion-group is-open="status2.open">
						<uib-accordion-heading>
							Elements SVG
							<i class="pull-right glyphicon" ng-class="{'glyphicon-chevron-down': status2.open, 'glyphicon-chevron-right': !status2.open}"></i>
						</uib-accordion-heading>
						<ul>
							<svg-icon data-objectid="svg-square" p="rectangle" draggable="true"></svg-icon>
							<svg-icon data-objectid="svg-circle" p="circle" draggable="true"></svg-icon>
							<svg-icon data-objectid="svg-path" p="arrow" draggable="true"></svg-icon>
						</ul>
					</uib-accordion-group>
					<uib-accordion-group is-open="status3.open">
						<uib-accordion-heading>
							Charts & Widgets
							<i class="pull-right glyphicon" ng-class="{'glyphicon-chevron-down': status1.open, 'glyphicon-chevron-right': !status1.open}"></i>
						</uib-accordion-heading>
						<ul id="drag-elements1" class="drag-elements" style="list-style-type:none">
							<li data-objectid="gauge1" draggable="true">
								<div class="dg" style="width:100px;height:100px;background-color:white;">
									<ng-dial-gauge id="gauge1" scale-min="25" scale-max="75" border-width="1" ng-model="gaugeValue" bar-color="pink" bar-width="6"
										units="%" angle="135" rotate="180" line-cap="round" style="stroke:blue;font-weight:100;"></ng-dial-gauge>
								</div>
							</li>
							<li data-objectid="gauge2" draggable="true">
								<div class="dg" style="width:100px;height:100px;background-color:white;">
									<ng-dial-gauge id="gauge2" scale-min="0" scale-max="100" border-color="grey" border-width="1" ng-model="gaugeValue" bar-color="green"
										bar-width="3" title="Temperature" angle="270" rotate="180" line-cap="round" style="stroke:blue;font-weight:100;height:450px;">
									</ng-dial-gauge>
								</div>
							</li>
							<li data-objectid="gauge3" draggable="true">
								<div class="dg" style="width:100px;height:100px;background-color:white;">
									<ng-dial-gauge id="gauge3" scale-min="0" scale-max="50" border-width="0" ng-model="gaugeValue" track-color="none" bar-color="red"
										bar-width="3" units="DegC" angle="135" rotate="0" line-cap="round" style="stroke:blue;font-weight:100;height:450px;">
									</ng-dial-gauge>
								</div>
							</li>
							<li data-objectid="lineChart" draggable="true">
								<div line-chart line-data='data' line-xkey='y' line-ykeys='["a", "b"]' line-labels='["Serie A", "Serie B"]' line-colors='["#31C0BE", "#c7254e"]'
									style="width:150px;height:80px;background-color:white;">
								</div>
							</li>
							<li data-objectid="barChart" draggable="true">
								<div bar-chart bar-data='data' bar-x='y' bar-y='["a", "b"]' bar-labels='["Series A", "Series B"]' bar-colors='["#31C0BE", "#c7254e"]'
									style="width:150px;height:80px;background-color:white;">
								</div>
							</li>
							<li data-objectid="donutChart" draggable="true">
								<div donut-chart donut-data='donutData' donut-colors='["#31C0BE","#c7254e","#98a0d3"]' donut-formatter='"currency"' style="width:150px;height:80px;background-color:white;">
								</div>
							</li>
						</ul>
					</uib-accordion-group>
				</uib-accordion>
			</uib-tab>
			<uib-tab select="tabAlert()">
				<uib-tab-heading>
					DataPoint
				</uib-tab-heading>
				<br>
				<div>
					Parent &nbsp;
				</div>
				<div>
					<select class="input-sm" ng-model="dpSelectPanel.parentSelect" ng-change="generateDP()">
						<option ng-repeat="i in allDP">{{i.id}}</option>
					</select>
				</div>
				<br>
				<div>
					Data Point &nbsp;
				</div>
				<div>
					<select class="input-sm" ng-model="dpSelectPanel.dpSelect" ng-change="generateObject()">
							<option ng-repeat="i in dpSelectPanel.dpList">{{i}}</option>
						</select>
				</div>
				<br>
				<br>
				<div>
					Objects For DataPoint &nbsp;
				</div>
				<br>
				<div style="background: #FFFFFF;border-style: inset;">
					<ul id="drag-elements1" class="drag-elements">
						<li data-objectid="gauge1" draggable="true" ng-show="(dpSelectPanel.doubleShow) || (dpSelectPanel.longShow) || (dpSelectPanel.integerShow)">
							<div class="dg" style="width:100px;height:100px;background-color:white;">
								<ng-dial-gauge id="gauge1" scale-min="25" scale-max="75" border-width="1" ng-model="gaugeValue" bar-color="pink" bar-width="6"
									units="%" angle="135" rotate="180" line-cap="round" style="stroke:blue;font-weight:100;"></ng-dial-gauge>
							</div>
						</li>
						<li data-objectid="gauge2" draggable="true" ng-show="(dpSelectPanel.doubleShow) || (dpSelectPanel.longShow) || (dpSelectPanel.integerShow)">
							<div class="dg" style="width:100px;height:100px;background-color:white;">
								<ng-dial-gauge id="gauge2" scale-min="0" scale-max="100" border-color="grey" border-width="1" ng-model="gaugeValue" bar-color="green"
									bar-width="3" title="Temperature" angle="270" rotate="180" line-cap="round" style="stroke:blue;font-weight:100;height:450px;">
								</ng-dial-gauge>
							</div>
						</li>
						<li data-objectid="gauge3" draggable="true" ng-show="(dpSelectPanel.doubleShow) || (dpSelectPanel.longShow) || (dpSelectPanel.integerShow)">
							<div class="dg" style="width:100px;height:100px;background-color:white;">
								<ng-dial-gauge id="gauge3" scale-min="0" scale-max="50" border-width="0" ng-model="gaugeValue" track-color="none" bar-color="red"
									bar-width="3" units="DegC" angle="135" rotate="0" line-cap="round" style="stroke:blue;font-weight:100;height:450px;">
								</ng-dial-gauge>
							</div>
						</li>
						<li data-objectid="lineChart" draggable="true" ng-show="(dpSelectPanel.arrayShow) || (dpSelectPanel.mapShow)">
							<div line-chart line-data='data' line-xkey='y' line-ykeys='["a", "b"]' line-labels='["Serie A", "Serie B"]' line-colors='["#31C0BE", "#c7254e"]'
								style="width:150px;height:80px;background-color:white;">
							</div>
						</li>
						<li data-objectid="barChart" draggable="true" ng-show="(dpSelectPanel.arrayShow) || (dpSelectPanel.mapShow)">
							<div bar-chart bar-data='data' bar-x='y' bar-y='["a", "b"]' bar-labels='["Series A", "Series B"]' bar-colors='["#31C0BE", "#c7254e"]'
								style="width:150px;height:80px;background-color:white;">
							</div>
						</li>
						<li data-objectid="donutChart" draggable="true" ng-show="(dpSelectPanel.arrayShow) || (dpSelectPanel.mapShow)">
							<div donut-chart donut-data='donutData' donut-colors='["#31C0BE","#c7254e","#98a0d3"]' donut-formatter='"currency"' style="width:150px;height:80px;background-color:white;">
							</div>
						</li>
						<li data-objectid="textBox" draggable="true" ng-show="(dpSelectPanel.doubleShow) || (dpSelectPanel.stringShow) || (dpSelectPanel.longShow) || (dpSelectPanel.integerShow)|| (dpSelectPanel.booleanShow)"><label class='mock-text-box' for='textBox' style=' font-family: Verdana; color: black; '>SimpleTextBox</label></li>
					</ul>
					<ul>
						<svg-icon data-objectid="svg-square" p="rectangle" draggable="true" ng-show="dpSelectPanel.booleanShow"></svg-icon>
						<svg-icon data-objectid="svg-circle" p="circle" draggable="true" ng-show="dpSelectPanel.booleanShow"></svg-icon>
						<svg-icon data-objectid="svg-path" p="arrow" draggable="true" ng-show="dpSelectPanel.booleanShow"></svg-icon>
					</ul>
				</div>
			</uib-tab>
		</uib-tabset>
		</br>
		</br>
		<div style="border-style: inset;">
			<span>Grid</span>
			<button type="button" class="btn btn-primary" ng-model="gridDetails.hide" ng-click="showHideGrid()" uib-btn-checkbox>
        			{{gridDetails.value}}
    			</button>
			</br>
			<span>Grid Color</span>
			<select class="input-sm" ng-model="gridDetails.colorSelect" ng-change="gridColorChange()">
					<option ng-repeat="i in ['white','black']">{{i}}</option>
			</select>
			<div class="dropdown">
				<button class=" dropdown-toggle TitleText" type="button" data-toggle="dropdown">
						Change Background
						<span class="caret"></span>
					</button>
				<div class="dropdown-menu ">
					<input type="text" ng-model="newimagepath" placeholder="Image URL" />
					<button class='btn subtext1' ng-click="setBackground()">CHANGE</button>
				</div>
			</div>
		</div>

	</div>
	<div id="main_ui" class="main" ng-style="mainPanelStyle">
		<div id="drop-target-one" ng-style="dropTargetOne.style">
		</div>
	</div>
	<!-- Options with respect to bottom panel. These will be hide/shown based on the selected object-->
	<div class="bottom" ng-show="bottomPropPanel.panelShow" ng-style="bottomPanelStyle">
		<div class="row">
			<div class="col-md-6 col-lg-6">
				Id &nbsp; &nbsp; &nbsp; &nbsp;
				<input type="text" ng-model="bottomPropPanel.name">
			</div>
			<div class="col-md-6 col-lg-6 text-right" ng-show="bottomPropPanel.minMaxButton">
				<button type="button" class="btn btn-primary" ng-model="bottomPropPanel.minMaxShow" uib-btn-checkbox ng-click="arrayMapDPGenerate(bottomPropPanel.minMaxValue)">
        			{{bottomPropPanel.minMaxValue}}
    			</button>
			</div>
		</div>

		<div ng-show="(bottomPropPanel.dpSelectShow) && (!bottomPropPanel.justPanel)">
			Parent &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.parentSelect" ng-change="generatePropDP()">
				<option ng-repeat="i in allDP">{{i.id}}</option>
			</select> &nbsp;&nbsp;&nbsp; Data Point &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.dpSelect">
				<option ng-repeat="i in bottomPropPanel.dpList">{{i}}</option>
			</select>
		</div>

		<div ng-show="bottomPropPanel.fontPropShow">
			<span ng-show="!bottomPropPanel.minMaxShow">
				Color &nbsp; &nbsp;&nbsp;&nbsp; 
			</span>
			<select class="input-sm" ng-model="bottomPropPanel.colorSelect" ng-show="!bottomPropPanel.minMaxShow">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select> Font &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.fontSelect">
				<option ng-repeat="i in bottomPropPanel.fontList">{{i}}</option>
			</select> &nbsp;&nbsp;&nbsp; Size &nbsp;
			<input type="number" ng-model="bottomPropPanel.fontSize" min="1" max="100">
			<span ng-show="!bottomPropPanel.minMaxShow">
				Background-Color &nbsp; &nbsp;&nbsp;&nbsp; 
			</span>
			<select class="input-sm" ng-model="bottomPropPanel.backColorSelect" ng-show="!bottomPropPanel.minMaxShow">
				<option ng-repeat="i in bottomPropPanel.backColorList">{{i}}</option>
			</select>
		</div>

		<!-- property setting options for Image and SVG (while svg Url is made hidden)-->
		<div ng-show="(bottomPropPanel.imageDetailsShow) || (bottomPropPanel.svgDetailsShow)">
			<span ng-show="!bottomPropPanel.svgDetailsShow">url &nbsp; &nbsp;&nbsp;&nbsp; </span>
			<input type="text" ng-model="bottomPropPanel.url" ng-show="!bottomPropPanel.svgDetailsShow">
			<!-- Property objects for SVG square -->
			&nbsp;&nbsp;&nbsp; <span ng-show="(!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgPathShow)"> Width(px) </span>			&nbsp;
			<input type="number" ng-model="bottomPropPanel.width" min="1" max="500" ng-show="(!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgPathShow)">			&nbsp;&nbsp;&nbsp; <span ng-show="(!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgPathShow)"> Height(px) </span>			&nbsp;
			<input type="number" ng-model="bottomPropPanel.height" min="1" max="500" ng-show="(!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgPathShow)">
			<!-- Property objects for SVG Circle -->
			&nbsp;&nbsp;&nbsp; <span ng-show="(!bottomPropPanel.svgSquareShow) && (!bottomPropPanel.svgPathShow) && (!bottomPropPanel.imageDetailsShow)"> radius(px) </span>			&nbsp;
			<input type="number" ng-model="bottomPropPanel.radius" min="1" max="500" ng-show="(!bottomPropPanel.svgSquareShow) && (!bottomPropPanel.svgPathShow) && (!bottomPropPanel.imageDetailsShow)">
			<!-- Property objects for SVG Path -->
			&nbsp;&nbsp;&nbsp; <span ng-show="(!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgSquareShow) && (!bottomPropPanel.imageDetailsShow)"> zoom(%) </span>			&nbsp;
			<input type="number" ng-model="bottomPropPanel.zoom" min="1" max="500" ng-show="(!bottomPropPanel.svgCircleShow) && (!bottomPropPanel.svgSquareShow) && (!bottomPropPanel.imageDetailsShow)">
		</div>

		<!-- property setting options for SVG-->
		<div ng-show="bottomPropPanel.svgDetailsShow">
			<input type="checkbox" ng-model="bottomPropPanel.justPanel"> Just Panel<br>
		</div>

		<!-- property setting options for SVG-->
		<div ng-show="!bottomPropPanel.justPanel">
			Normal-Color &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.nomColorSelect">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select> &nbsp;&nbsp;&nbsp;Danger-Color &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.dangrColorSelect">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select>
		</div>

		<div ng-show="(bottomPropPanel.rowSelectionShow) && (!bottomPropPanel.minMaxShow)">
			<input type="checkbox" ng-model="bottomPropPanel.unfixRowNos"> Unfix Rows<br> No of Rows &nbsp; &nbsp;&nbsp;&nbsp;
			<input type="number" ng-model="bottomPropPanel.rowNos" min="1" max="100" ng-disabled="bottomPropPanel.unfixRowNos">
		</div>

		<div ng-show="bottomPropPanel.minMaxShow">
			{{bottomPropPanel.maxTextBoxDisplayName}} &nbsp;
			<input type="number" ng-model="bottomPropPanel.value" min="1" max="100"> &nbsp;&nbsp;&nbsp; Max-Color &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.maxColorSelect">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select> &nbsp;&nbsp;&nbsp; {{bottomPropPanel.minTextBoxDisplayName}} &nbsp;
			<input type="number" ng-model="bottomPropPanel.maxPercent" min="1" max="100"> &nbsp;&nbsp;&nbsp; Min-Color &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.minColorSelect">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select> &nbsp;&nbsp;&nbsp; {{bottomPropPanel.nomTextBoxDisplayName}} &nbsp;
			<input type="number" ng-model="bottomPropPanel.minPercent" min="1" max="100"> &nbsp;&nbsp;&nbsp; Nom-Color &nbsp;
			<select class="input-sm" ng-model="bottomPropPanel.nomColorSelect">
				<option ng-repeat="i in bottomPropPanel.colorList">{{i}}</option>
			</select>
		</div>

		<div class="text-right">
			<a type="button" class="btn btn-primary" ng-click="assignProperties()">
				<span> OK</span>
			</a>
		</div>

	</div>

	<div id="menu">
		<a onclick="removeCustomMenu(this)">
			<img src="http://puu.sh/nr60s/42df867bf3.png" /> Delete Element
		</a>
		<a onclick="showDoubleMenu(this)" ng-click="testFunction(this)">
			<img src="http://puu.sh/nr5Z6/4360098fc1.png" /> Properties
		</a>
	</div>
</body>

<script>
	//CollapsibleLists.applyTo(document.getElementById('drag-elements'));
		CollapsibleLists.apply();

</script>

</html>

<script>
	// The functionality is used in order to hide the drop down menu while some item is being clicked
	var menu_item = document.getElementById("menu").style;
	document.addEventListener('click', function(e) {
		menu_item.opacity = "0";
		setTimeout(function() {
			menu_item.visibility = "hidden";
		});
	}, false);
	
	$('div.main').click(function(){
		socket.emit("panelVisibilityOnClick",{});
	});

</script>